// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_messages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataContainer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SpaceDescription;
}  // namespace protobuf_messages_2eproto
namespace ns3opengym {
class SpaceDescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpaceDescription>
      _instance;
} _SpaceDescription_default_instance_;
class DiscreteSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscreteSpace>
      _instance;
} _DiscreteSpace_default_instance_;
class BoxSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoxSpace>
      _instance;
} _BoxSpace_default_instance_;
class TupleSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TupleSpace>
      _instance;
} _TupleSpace_default_instance_;
class DictSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DictSpace>
      _instance;
} _DictSpace_default_instance_;
class DataContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataContainer>
      _instance;
} _DataContainer_default_instance_;
class DiscreteDataContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscreteDataContainer>
      _instance;
} _DiscreteDataContainer_default_instance_;
class BoxDataContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoxDataContainer>
      _instance;
} _BoxDataContainer_default_instance_;
class TupleDataContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TupleDataContainer>
      _instance;
} _TupleDataContainer_default_instance_;
class DictDataContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DictDataContainer>
      _instance;
} _DictDataContainer_default_instance_;
class SimInitMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimInitMsg>
      _instance;
} _SimInitMsg_default_instance_;
class SimInitAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimInitAck>
      _instance;
} _SimInitAck_default_instance_;
class EnvStateMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnvStateMsg>
      _instance;
} _EnvStateMsg_default_instance_;
class EnvActMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnvActMsg>
      _instance;
} _EnvActMsg_default_instance_;
}  // namespace ns3opengym
namespace protobuf_messages_2eproto {
static void InitDefaultsSpaceDescription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_SpaceDescription_default_instance_;
    new (ptr) ::ns3opengym::SpaceDescription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::SpaceDescription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SpaceDescription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSpaceDescription}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDiscreteSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DiscreteSpace_default_instance_;
    new (ptr) ::ns3opengym::DiscreteSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DiscreteSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscreteSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscreteSpace}, {}};

static void InitDefaultsBoxSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_BoxSpace_default_instance_;
    new (ptr) ::ns3opengym::BoxSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::BoxSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoxSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoxSpace}, {}};

static void InitDefaultsTupleSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_TupleSpace_default_instance_;
    new (ptr) ::ns3opengym::TupleSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::TupleSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TupleSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTupleSpace}, {
      &protobuf_messages_2eproto::scc_info_SpaceDescription.base,}};

static void InitDefaultsDictSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DictSpace_default_instance_;
    new (ptr) ::ns3opengym::DictSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DictSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DictSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDictSpace}, {
      &protobuf_messages_2eproto::scc_info_SpaceDescription.base,}};

static void InitDefaultsDataContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DataContainer_default_instance_;
    new (ptr) ::ns3opengym::DataContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DataContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataContainer}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDiscreteDataContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DiscreteDataContainer_default_instance_;
    new (ptr) ::ns3opengym::DiscreteDataContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DiscreteDataContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscreteDataContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscreteDataContainer}, {}};

static void InitDefaultsBoxDataContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_BoxDataContainer_default_instance_;
    new (ptr) ::ns3opengym::BoxDataContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::BoxDataContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoxDataContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoxDataContainer}, {}};

static void InitDefaultsTupleDataContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_TupleDataContainer_default_instance_;
    new (ptr) ::ns3opengym::TupleDataContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::TupleDataContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TupleDataContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTupleDataContainer}, {
      &protobuf_messages_2eproto::scc_info_DataContainer.base,}};

static void InitDefaultsDictDataContainer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DictDataContainer_default_instance_;
    new (ptr) ::ns3opengym::DictDataContainer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DictDataContainer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DictDataContainer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDictDataContainer}, {
      &protobuf_messages_2eproto::scc_info_DataContainer.base,}};

static void InitDefaultsSimInitMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_SimInitMsg_default_instance_;
    new (ptr) ::ns3opengym::SimInitMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::SimInitMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SimInitMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSimInitMsg}, {
      &protobuf_messages_2eproto::scc_info_SpaceDescription.base,}};

static void InitDefaultsSimInitAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_SimInitAck_default_instance_;
    new (ptr) ::ns3opengym::SimInitAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::SimInitAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SimInitAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSimInitAck}, {}};

static void InitDefaultsEnvStateMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_EnvStateMsg_default_instance_;
    new (ptr) ::ns3opengym::EnvStateMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::EnvStateMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnvStateMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnvStateMsg}, {
      &protobuf_messages_2eproto::scc_info_DataContainer.base,}};

static void InitDefaultsEnvActMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_EnvActMsg_default_instance_;
    new (ptr) ::ns3opengym::EnvActMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::EnvActMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnvActMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnvActMsg}, {
      &protobuf_messages_2eproto::scc_info_DataContainer.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SpaceDescription.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscreteSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoxSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TupleSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DictSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscreteDataContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoxDataContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TupleDataContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DictDataContainer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimInitMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimInitAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnvStateMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnvActMsg.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SpaceDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SpaceDescription, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SpaceDescription, space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SpaceDescription, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteSpace, n_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, shape_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::TupleSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::TupleSpace, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DictSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DictSpace, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DataContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DataContainer, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DataContainer, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DataContainer, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteDataContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteDataContainer, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, intdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, uintdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, floatdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxDataContainer, doubledata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::TupleDataContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::TupleDataContainer, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DictDataContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DictDataContainer, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitMsg, simprocessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitMsg, wafshellprocessid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitMsg, obsspace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitMsg, actspace_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitAck, done_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SimInitAck, stopsimreq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, obsdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, reward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, isgameover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvStateMsg, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvActMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvActMsg, actdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::EnvActMsg, stopsimreq_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ns3opengym::SpaceDescription)},
  { 8, -1, sizeof(::ns3opengym::DiscreteSpace)},
  { 14, -1, sizeof(::ns3opengym::BoxSpace)},
  { 23, -1, sizeof(::ns3opengym::TupleSpace)},
  { 29, -1, sizeof(::ns3opengym::DictSpace)},
  { 35, -1, sizeof(::ns3opengym::DataContainer)},
  { 43, -1, sizeof(::ns3opengym::DiscreteDataContainer)},
  { 49, -1, sizeof(::ns3opengym::BoxDataContainer)},
  { 60, -1, sizeof(::ns3opengym::TupleDataContainer)},
  { 66, -1, sizeof(::ns3opengym::DictDataContainer)},
  { 72, -1, sizeof(::ns3opengym::SimInitMsg)},
  { 81, -1, sizeof(::ns3opengym::SimInitAck)},
  { 88, -1, sizeof(::ns3opengym::EnvStateMsg)},
  { 98, -1, sizeof(::ns3opengym::EnvActMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_SpaceDescription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DiscreteSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_BoxSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_TupleSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DictSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DataContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DiscreteDataContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_BoxDataContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_TupleDataContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DictDataContainer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_SimInitMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_SimInitAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_EnvStateMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_EnvActMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\022\nns3opengym\032\031google/pro"
      "tobuf/any.proto\"j\n\020SpaceDescription\022#\n\004t"
      "ype\030\001 \001(\0162\025.ns3opengym.SpaceType\022#\n\005spac"
      "e\030\002 \001(\0132\024.google.protobuf.Any\022\014\n\004name\030\003 "
      "\001(\t\"\032\n\rDiscreteSpace\022\t\n\001n\030\001 \001(\005\"V\n\010BoxSp"
      "ace\022\013\n\003low\030\001 \001(\002\022\014\n\004high\030\002 \001(\002\022 \n\005dtype\030"
      "\003 \001(\0162\021.ns3opengym.Dtype\022\r\n\005shape\030\004 \003(\r\""
      ";\n\nTupleSpace\022-\n\007element\030\001 \003(\0132\034.ns3open"
      "gym.SpaceDescription\":\n\tDictSpace\022-\n\007ele"
      "ment\030\001 \003(\0132\034.ns3opengym.SpaceDescription"
      "\"f\n\rDataContainer\022#\n\004type\030\001 \001(\0162\025.ns3ope"
      "ngym.SpaceType\022\"\n\004data\030\002 \001(\0132\024.google.pr"
      "otobuf.Any\022\014\n\004name\030\003 \001(\t\"%\n\025DiscreteData"
      "Container\022\014\n\004data\030\001 \001(\005\"\215\001\n\020BoxDataConta"
      "iner\022 \n\005dtype\030\001 \001(\0162\021.ns3opengym.Dtype\022\r"
      "\n\005shape\030\002 \003(\r\022\017\n\007intData\030\003 \003(\005\022\020\n\010uintDa"
      "ta\030\004 \003(\r\022\021\n\tfloatData\030\005 \003(\002\022\022\n\ndoubleDat"
      "a\030\006 \003(\001\"@\n\022TupleDataContainer\022*\n\007element"
      "\030\001 \003(\0132\031.ns3opengym.DataContainer\"\?\n\021Dic"
      "tDataContainer\022*\n\007element\030\001 \003(\0132\031.ns3ope"
      "ngym.DataContainer\"\235\001\n\nSimInitMsg\022\024\n\014sim"
      "ProcessId\030\001 \001(\004\022\031\n\021wafShellProcessId\030\002 \001"
      "(\004\022.\n\010obsSpace\030\003 \001(\0132\034.ns3opengym.SpaceD"
      "escription\022.\n\010actSpace\030\004 \001(\0132\034.ns3opengy"
      "m.SpaceDescription\".\n\nSimInitAck\022\014\n\004done"
      "\030\001 \001(\010\022\022\n\nstopSimReq\030\002 \001(\010\"\306\001\n\013EnvStateM"
      "sg\022*\n\007obsData\030\001 \001(\0132\031.ns3opengym.DataCon"
      "tainer\022\016\n\006reward\030\002 \001(\002\022\022\n\nisGameOver\030\003 \001"
      "(\010\022.\n\006reason\030\004 \001(\0162\036.ns3opengym.EnvState"
      "Msg.Reason\022\014\n\004info\030\005 \001(\t\")\n\006Reason\022\021\n\rSi"
      "mulationEnd\020\000\022\014\n\010GameOver\020\001\"K\n\tEnvActMsg"
      "\022*\n\007actData\030\001 \001(\0132\031.ns3opengym.DataConta"
      "iner\022\022\n\nstopSimReq\030\002 \001(\010*\234\001\n\007MsgType\022\013\n\007"
      "Unknown\020\000\022\010\n\004Init\020\001\022\017\n\013ActionSpace\020\002\022\024\n\020"
      "ObservationSpace\020\003\022\016\n\nIsGameOver\020\004\022\017\n\013Ob"
      "servation\020\005\022\n\n\006Reward\020\006\022\r\n\tExtraInfo\020\007\022\n"
      "\n\006Action\020\010\022\013\n\007StopEnv\020\t*H\n\tSpaceType\022\017\n\013"
      "NoSpaceType\020\000\022\014\n\010Discrete\020\001\022\007\n\003Box\020\002\022\t\n\005"
      "Tuple\020\003\022\010\n\004Dict\020\004*>\n\005Dtype\022\013\n\007NoDType\020\000\022"
      "\007\n\003INT\020\001\022\010\n\004UINT\020\002\022\t\n\005FLOAT\020\003\022\n\n\006DOUBLE\020"
      "\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1609);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto
namespace ns3opengym {
const ::google::protobuf::EnumDescriptor* EnvStateMsg_Reason_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[0];
}
bool EnvStateMsg_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnvStateMsg_Reason EnvStateMsg::SimulationEnd;
const EnvStateMsg_Reason EnvStateMsg::GameOver;
const EnvStateMsg_Reason EnvStateMsg::Reason_MIN;
const EnvStateMsg_Reason EnvStateMsg::Reason_MAX;
const int EnvStateMsg::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[1];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SpaceType_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[2];
}
bool SpaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Dtype_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[3];
}
bool Dtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SpaceDescription::InitAsDefaultInstance() {
  ::ns3opengym::_SpaceDescription_default_instance_._instance.get_mutable()->space_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void SpaceDescription::clear_space() {
  if (GetArenaNoVirtual() == NULL && space_ != NULL) {
    delete space_;
  }
  space_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpaceDescription::kTypeFieldNumber;
const int SpaceDescription::kSpaceFieldNumber;
const int SpaceDescription::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpaceDescription::SpaceDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_SpaceDescription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.SpaceDescription)
}
SpaceDescription::SpaceDescription(const SpaceDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_space()) {
    space_ = new ::google::protobuf::Any(*from.space_);
  } else {
    space_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.SpaceDescription)
}

void SpaceDescription::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&space_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&space_)) + sizeof(type_));
}

SpaceDescription::~SpaceDescription() {
  // @@protoc_insertion_point(destructor:ns3opengym.SpaceDescription)
  SharedDtor();
}

void SpaceDescription::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete space_;
}

void SpaceDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpaceDescription::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpaceDescription& SpaceDescription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_SpaceDescription.base);
  return *internal_default_instance();
}


void SpaceDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.SpaceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && space_ != NULL) {
    delete space_;
  }
  space_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool SpaceDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.SpaceDescription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.SpaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ns3opengym::SpaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any space = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ns3opengym.SpaceDescription.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.SpaceDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.SpaceDescription)
  return false;
#undef DO_
}

void SpaceDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.SpaceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_space(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.SpaceDescription.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.SpaceDescription)
}

::google::protobuf::uint8* SpaceDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.SpaceDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_space(), deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.SpaceDescription.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.SpaceDescription)
  return target;
}

size_t SpaceDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.SpaceDescription)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *space_);
  }

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpaceDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.SpaceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const SpaceDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpaceDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.SpaceDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.SpaceDescription)
    MergeFrom(*source);
  }
}

void SpaceDescription::MergeFrom(const SpaceDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.SpaceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_space()) {
    mutable_space()->::google::protobuf::Any::MergeFrom(from.space());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SpaceDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.SpaceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpaceDescription::CopyFrom(const SpaceDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.SpaceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceDescription::IsInitialized() const {
  return true;
}

void SpaceDescription::Swap(SpaceDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpaceDescription::InternalSwap(SpaceDescription* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(space_, other->space_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpaceDescription::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscreteSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscreteSpace::kNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscreteSpace::DiscreteSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DiscreteSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DiscreteSpace)
}
DiscreteSpace::DiscreteSpace(const DiscreteSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  n_ = from.n_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DiscreteSpace)
}

void DiscreteSpace::SharedCtor() {
  n_ = 0;
}

DiscreteSpace::~DiscreteSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.DiscreteSpace)
  SharedDtor();
}

void DiscreteSpace::SharedDtor() {
}

void DiscreteSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscreteSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscreteSpace& DiscreteSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DiscreteSpace.base);
  return *internal_default_instance();
}


void DiscreteSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_ = 0;
  _internal_metadata_.Clear();
}

bool DiscreteSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DiscreteSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DiscreteSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DiscreteSpace)
  return false;
#undef DO_
}

void DiscreteSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->n(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DiscreteSpace)
}

::google::protobuf::uint8* DiscreteSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->n(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DiscreteSpace)
  return target;
}

size_t DiscreteSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DiscreteSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 n = 1;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscreteSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DiscreteSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscreteSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscreteSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DiscreteSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DiscreteSpace)
    MergeFrom(*source);
  }
}

void DiscreteSpace::MergeFrom(const DiscreteSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DiscreteSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n() != 0) {
    set_n(from.n());
  }
}

void DiscreteSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DiscreteSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscreteSpace::CopyFrom(const DiscreteSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DiscreteSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscreteSpace::IsInitialized() const {
  return true;
}

void DiscreteSpace::Swap(DiscreteSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscreteSpace::InternalSwap(DiscreteSpace* other) {
  using std::swap;
  swap(n_, other->n_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscreteSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoxSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxSpace::kLowFieldNumber;
const int BoxSpace::kHighFieldNumber;
const int BoxSpace::kDtypeFieldNumber;
const int BoxSpace::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoxSpace::BoxSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_BoxSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.BoxSpace)
}
BoxSpace::BoxSpace(const BoxSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&low_, &from.low_,
    static_cast<size_t>(reinterpret_cast<char*>(&dtype_) -
    reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
  // @@protoc_insertion_point(copy_constructor:ns3opengym.BoxSpace)
}

void BoxSpace::SharedCtor() {
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dtype_) -
      reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
}

BoxSpace::~BoxSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.BoxSpace)
  SharedDtor();
}

void BoxSpace::SharedDtor() {
}

void BoxSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoxSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoxSpace& BoxSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_BoxSpace.base);
  return *internal_default_instance();
}


void BoxSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dtype_) -
      reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
  _internal_metadata_.Clear();
}

bool BoxSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.BoxSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float low = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float high = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ns3opengym.Dtype dtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::ns3opengym::Dtype >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.BoxSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.BoxSpace)
  return false;
#undef DO_
}

void BoxSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float low = 1;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->low(), output);
  }

  // float high = 2;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->high(), output);
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->dtype(), output);
  }

  // repeated uint32 shape = 4;
  if (this->shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->shape(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.BoxSpace)
}

::google::protobuf::uint8* BoxSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float low = 1;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->low(), target);
  }

  // float high = 2;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->high(), target);
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->dtype(), target);
  }

  // repeated uint32 shape = 4;
  if (this->shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->shape_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.BoxSpace)
  return target;
}

size_t BoxSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.BoxSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 shape = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float low = 1;
  if (this->low() != 0) {
    total_size += 1 + 4;
  }

  // float high = 2;
  if (this->high() != 0) {
    total_size += 1 + 4;
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoxSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.BoxSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoxSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.BoxSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.BoxSpace)
    MergeFrom(*source);
  }
}

void BoxSpace::MergeFrom(const BoxSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.BoxSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
}

void BoxSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.BoxSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxSpace::CopyFrom(const BoxSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.BoxSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxSpace::IsInitialized() const {
  return true;
}

void BoxSpace::Swap(BoxSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoxSpace::InternalSwap(BoxSpace* other) {
  using std::swap;
  shape_.InternalSwap(&other->shape_);
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(dtype_, other->dtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoxSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TupleSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TupleSpace::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TupleSpace::TupleSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_TupleSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.TupleSpace)
}
TupleSpace::TupleSpace(const TupleSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.TupleSpace)
}

void TupleSpace::SharedCtor() {
}

TupleSpace::~TupleSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.TupleSpace)
  SharedDtor();
}

void TupleSpace::SharedDtor() {
}

void TupleSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TupleSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TupleSpace& TupleSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_TupleSpace.base);
  return *internal_default_instance();
}


void TupleSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.TupleSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool TupleSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.TupleSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ns3opengym.SpaceDescription element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.TupleSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.TupleSpace)
  return false;
#undef DO_
}

void TupleSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.TupleSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.SpaceDescription element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.TupleSpace)
}

::google::protobuf::uint8* TupleSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.TupleSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.SpaceDescription element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.TupleSpace)
  return target;
}

size_t TupleSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.TupleSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ns3opengym.SpaceDescription element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TupleSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.TupleSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const TupleSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TupleSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.TupleSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.TupleSpace)
    MergeFrom(*source);
  }
}

void TupleSpace::MergeFrom(const TupleSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.TupleSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void TupleSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.TupleSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TupleSpace::CopyFrom(const TupleSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.TupleSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TupleSpace::IsInitialized() const {
  return true;
}

void TupleSpace::Swap(TupleSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TupleSpace::InternalSwap(TupleSpace* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TupleSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DictSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictSpace::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictSpace::DictSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DictSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DictSpace)
}
DictSpace::DictSpace(const DictSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DictSpace)
}

void DictSpace::SharedCtor() {
}

DictSpace::~DictSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.DictSpace)
  SharedDtor();
}

void DictSpace::SharedDtor() {
}

void DictSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DictSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DictSpace& DictSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DictSpace.base);
  return *internal_default_instance();
}


void DictSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DictSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool DictSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DictSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ns3opengym.SpaceDescription element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DictSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DictSpace)
  return false;
#undef DO_
}

void DictSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DictSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.SpaceDescription element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DictSpace)
}

::google::protobuf::uint8* DictSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DictSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.SpaceDescription element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DictSpace)
  return target;
}

size_t DictSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DictSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ns3opengym.SpaceDescription element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DictSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DictSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const DictSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DictSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DictSpace)
    MergeFrom(*source);
  }
}

void DictSpace::MergeFrom(const DictSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DictSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void DictSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DictSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictSpace::CopyFrom(const DictSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DictSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictSpace::IsInitialized() const {
  return true;
}

void DictSpace::Swap(DictSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictSpace::InternalSwap(DictSpace* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DictSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataContainer::InitAsDefaultInstance() {
  ::ns3opengym::_DataContainer_default_instance_._instance.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void DataContainer::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataContainer::kTypeFieldNumber;
const int DataContainer::kDataFieldNumber;
const int DataContainer::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataContainer::DataContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DataContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DataContainer)
}
DataContainer::DataContainer(const DataContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DataContainer)
}

void DataContainer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&data_)) + sizeof(type_));
}

DataContainer::~DataContainer() {
  // @@protoc_insertion_point(destructor:ns3opengym.DataContainer)
  SharedDtor();
}

void DataContainer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void DataContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataContainer::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataContainer& DataContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DataContainer.base);
  return *internal_default_instance();
}


void DataContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool DataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DataContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.SpaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ns3opengym::SpaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ns3opengym.DataContainer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DataContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DataContainer)
  return false;
#undef DO_
}

void DataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.DataContainer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DataContainer)
}

::google::protobuf::uint8* DataContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.DataContainer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DataContainer)
  return target;
}

size_t DataContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DataContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Any data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const DataContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DataContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DataContainer)
    MergeFrom(*source);
  }
}

void DataContainer::MergeFrom(const DataContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void DataContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataContainer::CopyFrom(const DataContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataContainer::IsInitialized() const {
  return true;
}

void DataContainer::Swap(DataContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataContainer::InternalSwap(DataContainer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataContainer::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscreteDataContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscreteDataContainer::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscreteDataContainer::DiscreteDataContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DiscreteDataContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DiscreteDataContainer)
}
DiscreteDataContainer::DiscreteDataContainer(const DiscreteDataContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DiscreteDataContainer)
}

void DiscreteDataContainer::SharedCtor() {
  data_ = 0;
}

DiscreteDataContainer::~DiscreteDataContainer() {
  // @@protoc_insertion_point(destructor:ns3opengym.DiscreteDataContainer)
  SharedDtor();
}

void DiscreteDataContainer::SharedDtor() {
}

void DiscreteDataContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscreteDataContainer::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscreteDataContainer& DiscreteDataContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DiscreteDataContainer.base);
  return *internal_default_instance();
}


void DiscreteDataContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DiscreteDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear();
}

bool DiscreteDataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DiscreteDataContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DiscreteDataContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DiscreteDataContainer)
  return false;
#undef DO_
}

void DiscreteDataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DiscreteDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DiscreteDataContainer)
}

::google::protobuf::uint8* DiscreteDataContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DiscreteDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DiscreteDataContainer)
  return target;
}

size_t DiscreteDataContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DiscreteDataContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscreteDataContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DiscreteDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscreteDataContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscreteDataContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DiscreteDataContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DiscreteDataContainer)
    MergeFrom(*source);
  }
}

void DiscreteDataContainer::MergeFrom(const DiscreteDataContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DiscreteDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    set_data(from.data());
  }
}

void DiscreteDataContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DiscreteDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscreteDataContainer::CopyFrom(const DiscreteDataContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DiscreteDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscreteDataContainer::IsInitialized() const {
  return true;
}

void DiscreteDataContainer::Swap(DiscreteDataContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscreteDataContainer::InternalSwap(DiscreteDataContainer* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscreteDataContainer::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoxDataContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxDataContainer::kDtypeFieldNumber;
const int BoxDataContainer::kShapeFieldNumber;
const int BoxDataContainer::kIntDataFieldNumber;
const int BoxDataContainer::kUintDataFieldNumber;
const int BoxDataContainer::kFloatDataFieldNumber;
const int BoxDataContainer::kDoubleDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoxDataContainer::BoxDataContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_BoxDataContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.BoxDataContainer)
}
BoxDataContainer::BoxDataContainer(const BoxDataContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_(from.shape_),
      intdata_(from.intdata_),
      uintdata_(from.uintdata_),
      floatdata_(from.floatdata_),
      doubledata_(from.doubledata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dtype_ = from.dtype_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.BoxDataContainer)
}

void BoxDataContainer::SharedCtor() {
  dtype_ = 0;
}

BoxDataContainer::~BoxDataContainer() {
  // @@protoc_insertion_point(destructor:ns3opengym.BoxDataContainer)
  SharedDtor();
}

void BoxDataContainer::SharedDtor() {
}

void BoxDataContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoxDataContainer::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoxDataContainer& BoxDataContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_BoxDataContainer.base);
  return *internal_default_instance();
}


void BoxDataContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.BoxDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  intdata_.Clear();
  uintdata_.Clear();
  floatdata_.Clear();
  doubledata_.Clear();
  dtype_ = 0;
  _internal_metadata_.Clear();
}

bool BoxDataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.BoxDataContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.Dtype dtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::ns3opengym::Dtype >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 intData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_intdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_intdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uintData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uintdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_uintdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float floatData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floatdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_floatdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double doubleData = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_doubledata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 50u, input, this->mutable_doubledata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.BoxDataContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.BoxDataContainer)
  return false;
#undef DO_
}

void BoxDataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.BoxDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.Dtype dtype = 1;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dtype(), output);
  }

  // repeated uint32 shape = 2;
  if (this->shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->shape(i), output);
  }

  // repeated int32 intData = 3;
  if (this->intdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _intdata_cached_byte_size_));
  }
  for (int i = 0, n = this->intdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->intdata(i), output);
  }

  // repeated uint32 uintData = 4;
  if (this->uintdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uintdata_cached_byte_size_));
  }
  for (int i = 0, n = this->uintdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uintdata(i), output);
  }

  // repeated float floatData = 5;
  if (this->floatdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _floatdata_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->floatdata().data(), this->floatdata_size(), output);
  }

  // repeated double doubleData = 6;
  if (this->doubledata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _doubledata_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->doubledata().data(), this->doubledata_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.BoxDataContainer)
}

::google::protobuf::uint8* BoxDataContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.BoxDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.Dtype dtype = 1;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dtype(), target);
  }

  // repeated uint32 shape = 2;
  if (this->shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->shape_, target);
  }

  // repeated int32 intData = 3;
  if (this->intdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _intdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->intdata_, target);
  }

  // repeated uint32 uintData = 4;
  if (this->uintdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _uintdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uintdata_, target);
  }

  // repeated float floatData = 5;
  if (this->floatdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _floatdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->floatdata_, target);
  }

  // repeated double doubleData = 6;
  if (this->doubledata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _doubledata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->doubledata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.BoxDataContainer)
  return target;
}

size_t BoxDataContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.BoxDataContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 shape = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 intData = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->intdata_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _intdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 uintData = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uintdata_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uintdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float floatData = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->floatdata_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _floatdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double doubleData = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->doubledata_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _doubledata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .ns3opengym.Dtype dtype = 1;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoxDataContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.BoxDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxDataContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoxDataContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.BoxDataContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.BoxDataContainer)
    MergeFrom(*source);
  }
}

void BoxDataContainer::MergeFrom(const BoxDataContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.BoxDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  intdata_.MergeFrom(from.intdata_);
  uintdata_.MergeFrom(from.uintdata_);
  floatdata_.MergeFrom(from.floatdata_);
  doubledata_.MergeFrom(from.doubledata_);
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
}

void BoxDataContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.BoxDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxDataContainer::CopyFrom(const BoxDataContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.BoxDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxDataContainer::IsInitialized() const {
  return true;
}

void BoxDataContainer::Swap(BoxDataContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoxDataContainer::InternalSwap(BoxDataContainer* other) {
  using std::swap;
  shape_.InternalSwap(&other->shape_);
  intdata_.InternalSwap(&other->intdata_);
  uintdata_.InternalSwap(&other->uintdata_);
  floatdata_.InternalSwap(&other->floatdata_);
  doubledata_.InternalSwap(&other->doubledata_);
  swap(dtype_, other->dtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoxDataContainer::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TupleDataContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TupleDataContainer::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TupleDataContainer::TupleDataContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_TupleDataContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.TupleDataContainer)
}
TupleDataContainer::TupleDataContainer(const TupleDataContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.TupleDataContainer)
}

void TupleDataContainer::SharedCtor() {
}

TupleDataContainer::~TupleDataContainer() {
  // @@protoc_insertion_point(destructor:ns3opengym.TupleDataContainer)
  SharedDtor();
}

void TupleDataContainer::SharedDtor() {
}

void TupleDataContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TupleDataContainer::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TupleDataContainer& TupleDataContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_TupleDataContainer.base);
  return *internal_default_instance();
}


void TupleDataContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.TupleDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool TupleDataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.TupleDataContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ns3opengym.DataContainer element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.TupleDataContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.TupleDataContainer)
  return false;
#undef DO_
}

void TupleDataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.TupleDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.DataContainer element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.TupleDataContainer)
}

::google::protobuf::uint8* TupleDataContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.TupleDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.DataContainer element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.TupleDataContainer)
  return target;
}

size_t TupleDataContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.TupleDataContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ns3opengym.DataContainer element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TupleDataContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.TupleDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const TupleDataContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TupleDataContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.TupleDataContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.TupleDataContainer)
    MergeFrom(*source);
  }
}

void TupleDataContainer::MergeFrom(const TupleDataContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.TupleDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void TupleDataContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.TupleDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TupleDataContainer::CopyFrom(const TupleDataContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.TupleDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TupleDataContainer::IsInitialized() const {
  return true;
}

void TupleDataContainer::Swap(TupleDataContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TupleDataContainer::InternalSwap(TupleDataContainer* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TupleDataContainer::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DictDataContainer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictDataContainer::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictDataContainer::DictDataContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DictDataContainer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DictDataContainer)
}
DictDataContainer::DictDataContainer(const DictDataContainer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DictDataContainer)
}

void DictDataContainer::SharedCtor() {
}

DictDataContainer::~DictDataContainer() {
  // @@protoc_insertion_point(destructor:ns3opengym.DictDataContainer)
  SharedDtor();
}

void DictDataContainer::SharedDtor() {
}

void DictDataContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DictDataContainer::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DictDataContainer& DictDataContainer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DictDataContainer.base);
  return *internal_default_instance();
}


void DictDataContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DictDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _internal_metadata_.Clear();
}

bool DictDataContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DictDataContainer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ns3opengym.DataContainer element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DictDataContainer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DictDataContainer)
  return false;
#undef DO_
}

void DictDataContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DictDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.DataContainer element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DictDataContainer)
}

::google::protobuf::uint8* DictDataContainer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DictDataContainer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ns3opengym.DataContainer element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DictDataContainer)
  return target;
}

size_t DictDataContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DictDataContainer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ns3opengym.DataContainer element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DictDataContainer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DictDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const DictDataContainer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DictDataContainer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DictDataContainer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DictDataContainer)
    MergeFrom(*source);
  }
}

void DictDataContainer::MergeFrom(const DictDataContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DictDataContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void DictDataContainer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DictDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictDataContainer::CopyFrom(const DictDataContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DictDataContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictDataContainer::IsInitialized() const {
  return true;
}

void DictDataContainer::Swap(DictDataContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictDataContainer::InternalSwap(DictDataContainer* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DictDataContainer::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimInitMsg::InitAsDefaultInstance() {
  ::ns3opengym::_SimInitMsg_default_instance_._instance.get_mutable()->obsspace_ = const_cast< ::ns3opengym::SpaceDescription*>(
      ::ns3opengym::SpaceDescription::internal_default_instance());
  ::ns3opengym::_SimInitMsg_default_instance_._instance.get_mutable()->actspace_ = const_cast< ::ns3opengym::SpaceDescription*>(
      ::ns3opengym::SpaceDescription::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimInitMsg::kSimProcessIdFieldNumber;
const int SimInitMsg::kWafShellProcessIdFieldNumber;
const int SimInitMsg::kObsSpaceFieldNumber;
const int SimInitMsg::kActSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimInitMsg::SimInitMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_SimInitMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.SimInitMsg)
}
SimInitMsg::SimInitMsg(const SimInitMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_obsspace()) {
    obsspace_ = new ::ns3opengym::SpaceDescription(*from.obsspace_);
  } else {
    obsspace_ = NULL;
  }
  if (from.has_actspace()) {
    actspace_ = new ::ns3opengym::SpaceDescription(*from.actspace_);
  } else {
    actspace_ = NULL;
  }
  ::memcpy(&simprocessid_, &from.simprocessid_,
    static_cast<size_t>(reinterpret_cast<char*>(&wafshellprocessid_) -
    reinterpret_cast<char*>(&simprocessid_)) + sizeof(wafshellprocessid_));
  // @@protoc_insertion_point(copy_constructor:ns3opengym.SimInitMsg)
}

void SimInitMsg::SharedCtor() {
  ::memset(&obsspace_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wafshellprocessid_) -
      reinterpret_cast<char*>(&obsspace_)) + sizeof(wafshellprocessid_));
}

SimInitMsg::~SimInitMsg() {
  // @@protoc_insertion_point(destructor:ns3opengym.SimInitMsg)
  SharedDtor();
}

void SimInitMsg::SharedDtor() {
  if (this != internal_default_instance()) delete obsspace_;
  if (this != internal_default_instance()) delete actspace_;
}

void SimInitMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimInitMsg::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimInitMsg& SimInitMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_SimInitMsg.base);
  return *internal_default_instance();
}


void SimInitMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.SimInitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && obsspace_ != NULL) {
    delete obsspace_;
  }
  obsspace_ = NULL;
  if (GetArenaNoVirtual() == NULL && actspace_ != NULL) {
    delete actspace_;
  }
  actspace_ = NULL;
  ::memset(&simprocessid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wafshellprocessid_) -
      reinterpret_cast<char*>(&simprocessid_)) + sizeof(wafshellprocessid_));
  _internal_metadata_.Clear();
}

bool SimInitMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.SimInitMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 simProcessId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &simprocessid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 wafShellProcessId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &wafshellprocessid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ns3opengym.SpaceDescription obsSpace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obsspace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ns3opengym.SpaceDescription actSpace = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actspace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.SimInitMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.SimInitMsg)
  return false;
#undef DO_
}

void SimInitMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.SimInitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 simProcessId = 1;
  if (this->simprocessid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->simprocessid(), output);
  }

  // uint64 wafShellProcessId = 2;
  if (this->wafshellprocessid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->wafshellprocessid(), output);
  }

  // .ns3opengym.SpaceDescription obsSpace = 3;
  if (this->has_obsspace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_obsspace(), output);
  }

  // .ns3opengym.SpaceDescription actSpace = 4;
  if (this->has_actspace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_actspace(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.SimInitMsg)
}

::google::protobuf::uint8* SimInitMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.SimInitMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 simProcessId = 1;
  if (this->simprocessid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->simprocessid(), target);
  }

  // uint64 wafShellProcessId = 2;
  if (this->wafshellprocessid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->wafshellprocessid(), target);
  }

  // .ns3opengym.SpaceDescription obsSpace = 3;
  if (this->has_obsspace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_obsspace(), deterministic, target);
  }

  // .ns3opengym.SpaceDescription actSpace = 4;
  if (this->has_actspace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_actspace(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.SimInitMsg)
  return target;
}

size_t SimInitMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.SimInitMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ns3opengym.SpaceDescription obsSpace = 3;
  if (this->has_obsspace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obsspace_);
  }

  // .ns3opengym.SpaceDescription actSpace = 4;
  if (this->has_actspace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actspace_);
  }

  // uint64 simProcessId = 1;
  if (this->simprocessid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->simprocessid());
  }

  // uint64 wafShellProcessId = 2;
  if (this->wafshellprocessid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->wafshellprocessid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimInitMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.SimInitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SimInitMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimInitMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.SimInitMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.SimInitMsg)
    MergeFrom(*source);
  }
}

void SimInitMsg::MergeFrom(const SimInitMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.SimInitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_obsspace()) {
    mutable_obsspace()->::ns3opengym::SpaceDescription::MergeFrom(from.obsspace());
  }
  if (from.has_actspace()) {
    mutable_actspace()->::ns3opengym::SpaceDescription::MergeFrom(from.actspace());
  }
  if (from.simprocessid() != 0) {
    set_simprocessid(from.simprocessid());
  }
  if (from.wafshellprocessid() != 0) {
    set_wafshellprocessid(from.wafshellprocessid());
  }
}

void SimInitMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.SimInitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimInitMsg::CopyFrom(const SimInitMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.SimInitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimInitMsg::IsInitialized() const {
  return true;
}

void SimInitMsg::Swap(SimInitMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimInitMsg::InternalSwap(SimInitMsg* other) {
  using std::swap;
  swap(obsspace_, other->obsspace_);
  swap(actspace_, other->actspace_);
  swap(simprocessid_, other->simprocessid_);
  swap(wafshellprocessid_, other->wafshellprocessid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimInitMsg::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimInitAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimInitAck::kDoneFieldNumber;
const int SimInitAck::kStopSimReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimInitAck::SimInitAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_SimInitAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.SimInitAck)
}
SimInitAck::SimInitAck(const SimInitAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&done_, &from.done_,
    static_cast<size_t>(reinterpret_cast<char*>(&stopsimreq_) -
    reinterpret_cast<char*>(&done_)) + sizeof(stopsimreq_));
  // @@protoc_insertion_point(copy_constructor:ns3opengym.SimInitAck)
}

void SimInitAck::SharedCtor() {
  ::memset(&done_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stopsimreq_) -
      reinterpret_cast<char*>(&done_)) + sizeof(stopsimreq_));
}

SimInitAck::~SimInitAck() {
  // @@protoc_insertion_point(destructor:ns3opengym.SimInitAck)
  SharedDtor();
}

void SimInitAck::SharedDtor() {
}

void SimInitAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimInitAck::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimInitAck& SimInitAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_SimInitAck.base);
  return *internal_default_instance();
}


void SimInitAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.SimInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&done_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stopsimreq_) -
      reinterpret_cast<char*>(&done_)) + sizeof(stopsimreq_));
  _internal_metadata_.Clear();
}

bool SimInitAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.SimInitAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool done = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stopSimReq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stopsimreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.SimInitAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.SimInitAck)
  return false;
#undef DO_
}

void SimInitAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.SimInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->done(), output);
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stopsimreq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.SimInitAck)
}

::google::protobuf::uint8* SimInitAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.SimInitAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->done(), target);
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stopsimreq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.SimInitAck)
  return target;
}

size_t SimInitAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.SimInitAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool done = 1;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimInitAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.SimInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  const SimInitAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimInitAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.SimInitAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.SimInitAck)
    MergeFrom(*source);
  }
}

void SimInitAck::MergeFrom(const SimInitAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.SimInitAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.done() != 0) {
    set_done(from.done());
  }
  if (from.stopsimreq() != 0) {
    set_stopsimreq(from.stopsimreq());
  }
}

void SimInitAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.SimInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimInitAck::CopyFrom(const SimInitAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.SimInitAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimInitAck::IsInitialized() const {
  return true;
}

void SimInitAck::Swap(SimInitAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimInitAck::InternalSwap(SimInitAck* other) {
  using std::swap;
  swap(done_, other->done_);
  swap(stopsimreq_, other->stopsimreq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimInitAck::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnvStateMsg::InitAsDefaultInstance() {
  ::ns3opengym::_EnvStateMsg_default_instance_._instance.get_mutable()->obsdata_ = const_cast< ::ns3opengym::DataContainer*>(
      ::ns3opengym::DataContainer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnvStateMsg::kObsDataFieldNumber;
const int EnvStateMsg::kRewardFieldNumber;
const int EnvStateMsg::kIsGameOverFieldNumber;
const int EnvStateMsg::kReasonFieldNumber;
const int EnvStateMsg::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnvStateMsg::EnvStateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_EnvStateMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.EnvStateMsg)
}
EnvStateMsg::EnvStateMsg(const EnvStateMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_obsdata()) {
    obsdata_ = new ::ns3opengym::DataContainer(*from.obsdata_);
  } else {
    obsdata_ = NULL;
  }
  ::memcpy(&reward_, &from.reward_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&reward_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:ns3opengym.EnvStateMsg)
}

void EnvStateMsg::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&obsdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&obsdata_)) + sizeof(reason_));
}

EnvStateMsg::~EnvStateMsg() {
  // @@protoc_insertion_point(destructor:ns3opengym.EnvStateMsg)
  SharedDtor();
}

void EnvStateMsg::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete obsdata_;
}

void EnvStateMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnvStateMsg::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnvStateMsg& EnvStateMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_EnvStateMsg.base);
  return *internal_default_instance();
}


void EnvStateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.EnvStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && obsdata_ != NULL) {
    delete obsdata_;
  }
  obsdata_ = NULL;
  ::memset(&reward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&reward_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool EnvStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.EnvStateMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.DataContainer obsData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_obsdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float reward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isGameOver = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isgameover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ns3opengym.EnvStateMsg.Reason reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::ns3opengym::EnvStateMsg_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ns3opengym.EnvStateMsg.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.EnvStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.EnvStateMsg)
  return false;
#undef DO_
}

void EnvStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.EnvStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.DataContainer obsData = 1;
  if (this->has_obsdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_obsdata(), output);
  }

  // float reward = 2;
  if (this->reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->reward(), output);
  }

  // bool isGameOver = 3;
  if (this->isgameover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isgameover(), output);
  }

  // .ns3opengym.EnvStateMsg.Reason reason = 4;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->reason(), output);
  }

  // string info = 5;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.EnvStateMsg.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.EnvStateMsg)
}

::google::protobuf::uint8* EnvStateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.EnvStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.DataContainer obsData = 1;
  if (this->has_obsdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_obsdata(), deterministic, target);
  }

  // float reward = 2;
  if (this->reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->reward(), target);
  }

  // bool isGameOver = 3;
  if (this->isgameover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isgameover(), target);
  }

  // .ns3opengym.EnvStateMsg.Reason reason = 4;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->reason(), target);
  }

  // string info = 5;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.EnvStateMsg.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.EnvStateMsg)
  return target;
}

size_t EnvStateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.EnvStateMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string info = 5;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->info());
  }

  // .ns3opengym.DataContainer obsData = 1;
  if (this->has_obsdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *obsdata_);
  }

  // float reward = 2;
  if (this->reward() != 0) {
    total_size += 1 + 4;
  }

  // bool isGameOver = 3;
  if (this->isgameover() != 0) {
    total_size += 1 + 1;
  }

  // .ns3opengym.EnvStateMsg.Reason reason = 4;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnvStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.EnvStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvStateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnvStateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.EnvStateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.EnvStateMsg)
    MergeFrom(*source);
  }
}

void EnvStateMsg::MergeFrom(const EnvStateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.EnvStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_obsdata()) {
    mutable_obsdata()->::ns3opengym::DataContainer::MergeFrom(from.obsdata());
  }
  if (from.reward() != 0) {
    set_reward(from.reward());
  }
  if (from.isgameover() != 0) {
    set_isgameover(from.isgameover());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void EnvStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.EnvStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvStateMsg::CopyFrom(const EnvStateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.EnvStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvStateMsg::IsInitialized() const {
  return true;
}

void EnvStateMsg::Swap(EnvStateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnvStateMsg::InternalSwap(EnvStateMsg* other) {
  using std::swap;
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obsdata_, other->obsdata_);
  swap(reward_, other->reward_);
  swap(isgameover_, other->isgameover_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnvStateMsg::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnvActMsg::InitAsDefaultInstance() {
  ::ns3opengym::_EnvActMsg_default_instance_._instance.get_mutable()->actdata_ = const_cast< ::ns3opengym::DataContainer*>(
      ::ns3opengym::DataContainer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnvActMsg::kActDataFieldNumber;
const int EnvActMsg::kStopSimReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnvActMsg::EnvActMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_EnvActMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.EnvActMsg)
}
EnvActMsg::EnvActMsg(const EnvActMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_actdata()) {
    actdata_ = new ::ns3opengym::DataContainer(*from.actdata_);
  } else {
    actdata_ = NULL;
  }
  stopsimreq_ = from.stopsimreq_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.EnvActMsg)
}

void EnvActMsg::SharedCtor() {
  ::memset(&actdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stopsimreq_) -
      reinterpret_cast<char*>(&actdata_)) + sizeof(stopsimreq_));
}

EnvActMsg::~EnvActMsg() {
  // @@protoc_insertion_point(destructor:ns3opengym.EnvActMsg)
  SharedDtor();
}

void EnvActMsg::SharedDtor() {
  if (this != internal_default_instance()) delete actdata_;
}

void EnvActMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnvActMsg::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnvActMsg& EnvActMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_EnvActMsg.base);
  return *internal_default_instance();
}


void EnvActMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.EnvActMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && actdata_ != NULL) {
    delete actdata_;
  }
  actdata_ = NULL;
  stopsimreq_ = false;
  _internal_metadata_.Clear();
}

bool EnvActMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.EnvActMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.DataContainer actData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stopSimReq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stopsimreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.EnvActMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.EnvActMsg)
  return false;
#undef DO_
}

void EnvActMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.EnvActMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.DataContainer actData = 1;
  if (this->has_actdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_actdata(), output);
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stopsimreq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.EnvActMsg)
}

::google::protobuf::uint8* EnvActMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.EnvActMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.DataContainer actData = 1;
  if (this->has_actdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_actdata(), deterministic, target);
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stopsimreq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.EnvActMsg)
  return target;
}

size_t EnvActMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.EnvActMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ns3opengym.DataContainer actData = 1;
  if (this->has_actdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *actdata_);
  }

  // bool stopSimReq = 2;
  if (this->stopsimreq() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnvActMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.EnvActMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const EnvActMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnvActMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.EnvActMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.EnvActMsg)
    MergeFrom(*source);
  }
}

void EnvActMsg::MergeFrom(const EnvActMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.EnvActMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_actdata()) {
    mutable_actdata()->::ns3opengym::DataContainer::MergeFrom(from.actdata());
  }
  if (from.stopsimreq() != 0) {
    set_stopsimreq(from.stopsimreq());
  }
}

void EnvActMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.EnvActMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvActMsg::CopyFrom(const EnvActMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.EnvActMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvActMsg::IsInitialized() const {
  return true;
}

void EnvActMsg::Swap(EnvActMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnvActMsg::InternalSwap(EnvActMsg* other) {
  using std::swap;
  swap(actdata_, other->actdata_);
  swap(stopsimreq_, other->stopsimreq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnvActMsg::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ns3opengym
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::SpaceDescription* Arena::CreateMaybeMessage< ::ns3opengym::SpaceDescription >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::SpaceDescription >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DiscreteSpace* Arena::CreateMaybeMessage< ::ns3opengym::DiscreteSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DiscreteSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::BoxSpace* Arena::CreateMaybeMessage< ::ns3opengym::BoxSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::BoxSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::TupleSpace* Arena::CreateMaybeMessage< ::ns3opengym::TupleSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::TupleSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DictSpace* Arena::CreateMaybeMessage< ::ns3opengym::DictSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DictSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DataContainer* Arena::CreateMaybeMessage< ::ns3opengym::DataContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DataContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DiscreteDataContainer* Arena::CreateMaybeMessage< ::ns3opengym::DiscreteDataContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DiscreteDataContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::BoxDataContainer* Arena::CreateMaybeMessage< ::ns3opengym::BoxDataContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::BoxDataContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::TupleDataContainer* Arena::CreateMaybeMessage< ::ns3opengym::TupleDataContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::TupleDataContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DictDataContainer* Arena::CreateMaybeMessage< ::ns3opengym::DictDataContainer >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DictDataContainer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::SimInitMsg* Arena::CreateMaybeMessage< ::ns3opengym::SimInitMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::SimInitMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::SimInitAck* Arena::CreateMaybeMessage< ::ns3opengym::SimInitAck >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::SimInitAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::EnvStateMsg* Arena::CreateMaybeMessage< ::ns3opengym::EnvStateMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::EnvStateMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::EnvActMsg* Arena::CreateMaybeMessage< ::ns3opengym::EnvActMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::EnvActMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
